---
- name: users default | create group
  group:
    name: "{{ dvrg_user }}"
    state: present

- name: users default | create user
  user:
    name: "{{ dvrg_user }}"
    group: "{{ dvrg_user }}"
    groups:
      - adm
      - audio
      - bluetooth
      - cdrom
      - dip
      - floppy
      - lpadmin
      - netdev
      - plugdev
      - scanner
      - ssh
      - sudo
      - video
    state: present
    comment: "{{ dvrg_comment }}"
    shell: /usr/bin/zsh

- name: users default | authorized key
  authorized_key:
    user: "{{ dvrg_user }}"
    key: "{{ dvrg_ssh_key}}"
    state: present

- name: users default | sudoerd.d
  copy:
    src: sudo/adm
    dest: /etc/sudoers.d/adm
    owner: root
    group: root
    mode: 0660

- name: users default | .ssh/id_ed25519
  copy:
    src: secrets/ssh/c.vande.griend@gmail.com-id_ed25519
    dest: "/home/{{ dvrg_user }}/.ssh/id_ed25519"
    owner: "{{ dvrg_user }}"
    group: "{{ dvrg_user }}"
    mode: 0600

- name: users default | .gitconfig
  template:
    src: users/gitconfig.j2
    dest: "/home/{{ dvrg_user }}/.gitconfig"
    owner: "{{ dvrg_user }}"
    group: "{{ dvrg_user }}"
    mode: 0600

- name: users default | .ssh/config
  template:
    force: no
    src: users/sshconfig.j2
    dest: "/home/{{ dvrg_user }}/.ssh/config"
    owner: "{{ dvrg_user }}"
    group: "{{ dvrg_user }}"
    mode: 0600

#
# Import public GPG key
#
- name: users default | check public GPG key
  become: yes
  become_user: "{{ dvrg_user }}"
  command: "gpg2 --list-public-keys {{ dvrg_gpg_key }}"
  register: gpg_public_key_exist
  ignore_errors: true

- name: users default | copy public GPG key
  copy:
    src: secrets/gpg/c.vande.griend@gmail.com-public.asc
    dest: /tmp/public.asc
    owner: "{{ dvrg_user }}"
    group: "{{ dvrg_user }}"
    mode: 0600
  when: gpg_public_key_exist.rc != 0

- name: users default | import public GPG key
  become: yes
  become_user: "{{ dvrg_user }}"
  command: gpg2 --import /tmp/public.asc
  register: gpg_key_import
  when: gpg_public_key_exist.rc != 0

#
# Import GPG trust
#
- name: users default | create GPG trust
  become: yes
  become_user: "{{ dvrg_user }}"
  shell: "gpg2 --export-ownertrust && echo {{ dvrg_gpg_key }}:6: > /tmp/trust.asc"
  when: gpg_public_key_exist.rc != 0

- name: users default | import GPG trust
  become: yes
  become_user: "{{ dvrg_user }}"
  command: gpg2 --import-ownertrust /tmp/trust.asc
  when: gpg_public_key_exist.rc != 0

#
# Cleanup GPG
#
- name: users default | delete public GPG key
  file:
    path: /tmp/public.asc
    state: absent
  when: gpg_public_key_exist.rc != 0

- name: users default | delete GPG trust
  file:
    path: /tmp/trust.asc
    state: absent
  when: gpg_public_key_exist.rc != 0

#
# Copy secrets
#
- name: users default | copy secrets
  copy:
    src: secrets
    dest: "/home/{{ dvrg_user }}/Documents"
    owner: "{{ dvrg_user }}"
    group: "{{ dvrg_user }}"
    mode: 0600
    directory_mode: 0700
